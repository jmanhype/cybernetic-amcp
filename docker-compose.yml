version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:4.1-management-alpine
    container_name: cybernetic-rabbitmq
    ports:
      - "5672:5672"     # AMQP port
      - "15672:15672"   # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: cybernetic
      RABBITMQ_DEFAULT_PASS: dev_password
      RABBITMQ_DEFAULT_VHOST: cybernetic
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - cybernetic-network

  postgres:
    image: postgres:16-alpine
    container_name: cybernetic-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: cybernetic
      POSTGRES_PASSWORD: cybernetic123
      POSTGRES_DB: cybernetic_dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cybernetic"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - cybernetic-network

  redis:
    image: redis:7-alpine
    container_name: cybernetic-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - cybernetic-network

  # OpenTelemetry Collector for staging observability
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.109.0
    container_name: cybernetic-otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml:ro
    ports:
      - "4317:4317"     # OTLP gRPC receiver
      - "4318:4318"     # OTLP HTTP receiver
      - "8888:8888"     # Prometheus metrics
      - "8889:8889"     # Prometheus exporter
      - "13133:13133"   # Health check
    depends_on:
      - jaeger
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:13133/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cybernetic-network

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:1.60
    container_name: cybernetic-jaeger
    ports:
      - "16686:16686"   # Jaeger UI
      - "14250:14250"   # gRPC
      - "14268:14268"   # HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    volumes:
      - jaeger-data:/badger
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:14269/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cybernetic-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: cybernetic-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    depends_on:
      - otel-collector
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cybernetic-network

  # Grafana for metrics and trace visualization
  grafana:
    image: grafana/grafana:11.2.0
    container_name: cybernetic-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=cybernetic_dev
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
      - jaeger
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cybernetic-network

volumes:
  rabbitmq-data:
  postgres-data:
  redis-data:
  jaeger-data:
  prometheus-data:
  grafana-data:

networks:
  cybernetic-network:
    driver: bridge